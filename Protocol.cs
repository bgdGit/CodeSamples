using System;

namespace MBLL
{
    [Flags]
    public enum WhatProtocol
    {
        /*KANAL номер канала(в данном случае 0) OK номера канала , затем многократно в течение ~7 
         * сек выдается протокол датчика (например по картинке - датчик температуры с номером 0), 
         * т.е. - TEMPER номер датчика (в данном случае 0) старший байт температуры  младший байт 
         * температуры OK повт. номер датчика END.*/
        Suwilka = 1,
        /*KON0 Зола(ст.б-т)Зола(мл.б-т)  Нагр(ст.б-т) Нагр.(мл.б-т) Весы(ст.б-т) 
         * Весы(мл.б-т) Шибер(1 б-т) Конвейер(1 б-т) Маркер(1 б-т)  Кон.вагона(1 б-т) OК */
        Zola = 2,
        /*KON0 Зола(ст.б-т)Зола(мл.б-т)  Нагр(ст.б-т) Нагр.(мл.б-т) Влажность(ст.б-т) 
         * Влажность(мл.б-т) Весы(ст.б-т) Весы(мл.б-т) Шибер(1 б-т) Конвейер(1 б-т) Маркер(1 б-т)  
         * Кон.вагона(1 б-т) OК*/
        ZolaVlaga = 4,
        /*KANAL номер канала(одна цифра - один байт) OK номера канала(одна цифра - один байт) , затем многократно в течение ~7 
         * сек выдается протокол датчика, 
         * т.е. - VLAGA номер датчика(одна цифра - один байт) старший байт влажности  младший байт 
         * влажности OK повт. номер датчика */
        Vlaga = 8,
        /*KANAL номер канала (одна цифра - один байт) OK номера канала , затем многократно в течение ~7 
         * сек выдается протокол датчика, 
         * т.е. - TEMPER  номер датчика (одна цифра - один байт) старший байт температуры младший байт 
         * температуры OK повт. номер датчика */
        Temper = 16,
        /*KANAL номер канала (одна цифра - один байт) OK номера канала , затем многократно в течение ~7 
         * сек выдается протокол датчика, 
         * т.е. - TEMPER  номер датчика (одна цифра - один байт) старший байт температуры младший байт 
         * температуры OK повт. номер датчика 
         * VLAGA номер датчика(одна цифра - один байт) старший байт влажности  младший байт 
         * влажности OK повт. номер датчика*/
        VlagaTemper = 32,
        /*KANAL номер канала (одна цифра - один байт) OK номера канала , затем многократно в течение ~7 
         * сек выдается протокол датчика, 
         * т.е. - ZNACH  номер датчика (одна цифра - один байт) старший байт температуры младший байт 
         * температуры OK повт. номер датчика */
        Znach = 64,
    }
    [Flags]
    public enum WhatConnection
    { // перечисление возможных соединений с блоком сопряжения
        COM,
        TCP,
    }
    public static class Protocol
    { // класс для определения по какому протоколу пойдет расшифровка

        private static WhatProtocol _protocol;
        public static WhatProtocol Protocol1
        {
            get { return _protocol; }
            set { _protocol = value; }
        }
    }
}
